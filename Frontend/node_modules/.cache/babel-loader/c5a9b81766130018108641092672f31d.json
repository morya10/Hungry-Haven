{"ast":null,"code":"var _jsxFileName = \"D:\\\\edited project\\\\Frontend\\\\src\\\\Pages\\\\Customer\\\\CustomerAddress\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { URL } from '../../../config';\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerAddress = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [addressText, setAddressText] = useState(sessionStorage[\"addressText\"]);\n  const [pinCode, setPinCode] = useState(sessionStorage[\"pinCode\"]);\n\n  const updateAddress = e => {\n    e.preventDefault();\n\n    if (sessionStorage[\"updateMode\"] === \"true\") {\n      document.getElementById(\"updateAddressButton\").classList.remove(\"btn-outline-primary\");\n      document.getElementById(\"updateAddressButton\").classList.add(\"btn-outline-danger\");\n      document.getElementById(\"prevButton\").disabled = true;\n      document.getElementById(\"nextButton\").disabled = true;\n      document.getElementById(\"address\").disabled = false;\n      document.getElementById(\"pinCode\").disabled = false;\n      sessionStorage[\"updateMode\"] = \"false\";\n    } else {\n      document.getElementById(\"updateAddressButton\").classList.add(\"btn-outline-primary\");\n      document.getElementById(\"updateAddressButton\").classList.remove(\"btn-outline-danger\");\n      document.getElementById(\"prevButton\").disabled = false;\n      document.getElementById(\"nextButton\").disabled = false;\n      document.getElementById(\"address\").disabled = true;\n      document.getElementById(\"pinCode\").disabled = true; // update address\n\n      const customerId = sessionStorage[\"id\"];\n      const url = `${URL}/customers/${customerId}/address`;\n      const body = {\n        addressText,\n        pinCode\n      };\n      axios.put(url, body).then(response => {\n        const result = response.data;\n\n        if (result.status === \"SUCCESS\") {\n          toast.success(\"Address successfully updated\");\n          sessionStorage[\"addressText\"] = addressText;\n          sessionStorage[\"pinCode\"] = pinCode;\n        } else {\n          toast.error(result.message);\n          setAddressText(sessionStorage[\"addressText\"]);\n          setPinCode(sessionStorage[\"pinCode\"]);\n        }\n      }).catch(error => {\n        console.log(error);\n        setAddressText(sessionStorage[\"addressText\"]);\n        setPinCode(sessionStorage[\"pinCode\"]);\n      });\n      sessionStorage[\"updateMode\"] = \"true\";\n    }\n  };\n\n  useEffect(() => {\n    sessionStorage[\"updateMode\"] = \"true\";\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"address\",\n              className: \"label-control\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"address\",\n              onChange: e => setAddressText(e.target.value),\n              value: addressText,\n              className: \"form-control\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"pinCode\",\n              className: \"label-control\",\n              children: \"Pincode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"pinCode\",\n              onChange: e => setPinCode(e.target.value),\n              value: pinCode,\n              className: \"form-control\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-primary\",\n              id: \"updateAddressButton\",\n              onClick: e => {\n                updateAddress(e);\n              },\n              children: \"Update Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-primary\",\n        id: \"prevButton\",\n        onClick: () => {\n          navigate(\"/customer/cart\");\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary float-right\",\n        id: \"nextButton\",\n        onClick: () => {\n          navigate(\"/customer/payment\");\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomerAddress, \"AzswWgOQ6sXs1WYpR5RZPZ3wTq8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CustomerAddress;\nexport default CustomerAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerAddress\");","map":{"version":3,"sources":["D:/edited project/Frontend/src/Pages/Customer/CustomerAddress/index.js"],"names":["axios","useEffect","useState","toast","URL","useNavigate","CustomerAddress","navigate","addressText","setAddressText","sessionStorage","pinCode","setPinCode","updateAddress","e","preventDefault","document","getElementById","classList","remove","add","disabled","customerId","url","body","put","then","response","result","data","status","success","error","message","catch","console","log","target","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\"\r\nimport { toast } from \"react-toastify\";\r\nimport { URL } from '../../../config'\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst CustomerAddress = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const [addressText, setAddressText] = useState(sessionStorage[\"addressText\"]);\r\n    const [pinCode, setPinCode] = useState(sessionStorage[\"pinCode\"]);\r\n\r\n    const updateAddress = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(sessionStorage[\"updateMode\"] === \"true\") {\r\n            document.getElementById(\"updateAddressButton\").classList.remove(\"btn-outline-primary\");\r\n            document.getElementById(\"updateAddressButton\").classList.add(\"btn-outline-danger\");\r\n\r\n            document.getElementById(\"prevButton\").disabled = true;\r\n            document.getElementById(\"nextButton\").disabled = true;\r\n\r\n            document.getElementById(\"address\").disabled = false;\r\n            document.getElementById(\"pinCode\").disabled = false;\r\n            sessionStorage[\"updateMode\"] = \"false\";\r\n        } else {\r\n            document.getElementById(\"updateAddressButton\").classList.add(\"btn-outline-primary\");\r\n            document.getElementById(\"updateAddressButton\").classList.remove(\"btn-outline-danger\");\r\n\r\n            document.getElementById(\"prevButton\").disabled = false;\r\n            document.getElementById(\"nextButton\").disabled = false;\r\n\r\n            document.getElementById(\"address\").disabled = true;\r\n            document.getElementById(\"pinCode\").disabled = true;\r\n\r\n            // update address\r\n            const customerId = sessionStorage[\"id\"];\r\n            const url = `${URL}/customers/${customerId}/address`;\r\n            const body = {\r\n                addressText,\r\n                pinCode\r\n            }\r\n            axios.put(url, body).then(response => {\r\n                const result = response.data;\r\n                if(result.status === \"SUCCESS\") {\r\n                    toast.success(\"Address successfully updated\");\r\n                    sessionStorage[\"addressText\"] = addressText;\r\n                    sessionStorage[\"pinCode\"] = pinCode;\r\n                } else {\r\n                    toast.error(result.message);\r\n                    setAddressText(sessionStorage[\"addressText\"]);\r\n                    setPinCode(sessionStorage[\"pinCode\"]);\r\n                }\r\n            }).catch(error => {\r\n                console.log(error);\r\n                setAddressText(sessionStorage[\"addressText\"]);\r\n                setPinCode(sessionStorage[\"pinCode\"]);\r\n            })\r\n\r\n            sessionStorage[\"updateMode\"] = \"true\";\r\n        }\r\n    }\r\n\r\n     \r\n    useEffect( ()=> {\r\n        sessionStorage[\"updateMode\"] = \"true\";\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h3>Address</h3>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\"></div>\r\n                <div className=\"col\">\r\n                    <div className=\"form\">\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"address\" className=\"label-control\">\r\n                                Address\r\n                            </label>\r\n                            <textarea \r\n                                id=\"address\" \r\n                                onChange={ (e) => setAddressText(e.target.value) } \r\n                                value={addressText} \r\n                                className=\"form-control\"\r\n                                disabled={true} >\r\n                            </textarea>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"pinCode\" className=\"label-control\">\r\n                                Pincode\r\n                            </label>\r\n                            <input \r\n                                type=\"number\" \r\n                                id=\"pinCode\" \r\n                                onChange={ (e) => setPinCode(e.target.value) } \r\n                                value={pinCode} \r\n                                className=\"form-control\"\r\n                                disabled={true} />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <button\r\n                                className=\"btn btn-outline-primary\" \r\n                                id=\"updateAddressButton\"\r\n                                onClick={(e) => { updateAddress(e) }}>\r\n                                    Update Address\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"col\"></div>\r\n            </div>\r\n\r\n\r\n            <div className=\"mt-4\">\r\n                <button className=\"btn btn-outline-primary\" id=\"prevButton\" onClick={ () => {navigate(\"/customer/cart\")}}>Previous</button>\r\n                <button className=\"btn btn-primary float-right\" id=\"nextButton\" onClick={() => { navigate(\"/customer/payment\") }}>Next</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerAddress;"]},"metadata":{},"sourceType":"module"}