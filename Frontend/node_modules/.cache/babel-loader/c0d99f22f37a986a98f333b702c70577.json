{"ast":null,"code":"var _jsxFileName = \"D:\\\\edited project\\\\Frontend\\\\src\\\\Pages\\\\Customer\\\\CustomerCart\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FoodItemHorizontal from \"../../../Components/FoodItemHorizontal\";\nimport { URL } from '../../../config';\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerCart = () => {\n  _s();\n\n  const navigate = useNavigate();\n  let foodItemArray = [];\n  const [foodItems, setFoodItems] = useState([]);\n  let foodItemMap = new Map(JSON.parse(sessionStorage[\"foodItemMap\"]));\n  const [total, setTotal] = useState(0.00);\n\n  const loadFoodItems = () => {\n    const url = `${URL}/fooditems/cart`;\n    foodItemMap = new Map(JSON.parse(sessionStorage[\"foodItemMap\"]));\n    foodItemArray = [];\n    foodItemMap.forEach((value, key, map) => {\n      foodItemArray.push(key);\n    });\n    const body = {\n      itemIds: [...foodItemArray]\n    };\n    axios.post(url, body).then(response => {\n      const result = response.data;\n\n      if (result.status === \"SUCCESS\") {\n        const cart = result.data;\n        sessionStorage[\"sessionCart\"] = JSON.stringify(cart);\n        setFoodItems(cart);\n      }\n    });\n  };\n\n  const addQtyBtn = id => {\n    // get data from session\n    const cart = JSON.parse(sessionStorage[\"sessionCart\"]);\n    foodItemMap = new Map(JSON.parse(sessionStorage[\"foodItemMap\"])); // add quantity\n\n    cart.forEach(food => {\n      if (food.id === id) {\n        foodItemMap.set(id, foodItemMap.get(id) + 1);\n      }\n    });\n    sessionStorage[\"sessionCart\"] = JSON.stringify(cart);\n    sessionStorage[\"foodItemMap\"] = JSON.stringify(Array.from(foodItemMap.entries()));\n    setFoodItems(cart); // triggers\n    // update total\n\n    updateTotal();\n  };\n\n  const delQtyBtn = id => {\n    let cart = JSON.parse(sessionStorage[\"sessionCart\"]);\n    let foodIdToDelete = undefined;\n    foodItemMap = new Map(JSON.parse(sessionStorage[\"foodItemMap\"])); // get map\n\n    cart.forEach(food => {\n      if (food.id === id) {\n        // food.quantity = food.quantity - 1;\n        foodItemMap.set(id, foodItemMap.get(id) - 1);\n\n        if (foodItemMap.get(id) <= 0) {\n          // if qty <= 0\n          foodIdToDelete = food.id; // store for later, to remove from cart\n\n          foodItemMap.delete(id); // remove from map\n        }\n      }\n    });\n\n    if (foodIdToDelete) {\n      // remove from cart (if qty < 0, this value is set)\n      cart = cart.filter(food => !(food.id === foodIdToDelete));\n    } // save in session\n\n\n    sessionStorage[\"foodItemMap\"] = JSON.stringify(Array.from(foodItemMap.entries()));\n    sessionStorage[\"sessionCart\"] = JSON.stringify(cart);\n    setFoodItems(cart); // update state of cart\n    // triggers\n    // update total\n\n    updateTotal();\n  };\n\n  const updateTotal = () => {\n    // reset count\n    setTotal(0.0); // get items from session\n\n    let cart = JSON.parse(sessionStorage[\"sessionCart\"]);\n    foodItemMap = new Map(JSON.parse(sessionStorage[\"foodItemMap\"])); // get map\n    // calculate total\n\n    let tempTotal = 0.0;\n    cart.forEach(foodItem => {\n      tempTotal += foodItemMap.get(foodItem.id) * foodItem.price; // qty * price\n    }); // set total\n\n    setTotal(tempTotal);\n  };\n\n  useEffect(() => {\n    loadFoodItems();\n    setTimeout(updateTotal, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), sessionStorage[\"foodItemMap\"] === null || sessionStorage[\"foodItemMap\"] === undefined || sessionStorage[\"foodItemMap\"] === \"[]\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [\"Your cart is empty. Add some food items to cart to continue. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 82\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/customer/home\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          children: \"Browse restaurants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // FoodItemHorizontal container\n    _jsxDEV(\"div\", {\n      children: [foodItems.map(foodItem => /*#__PURE__*/_jsxDEV(FoodItemHorizontal, {\n        id: foodItem.id,\n        imagePath: foodItem.imagePath,\n        name: foodItem.name,\n        quantity: foodItemMap.get(foodItem.id),\n        displayQuantityCounter: true,\n        price: foodItem.price,\n        displayEdit: false,\n        addQtyBtn: addQtyBtn,\n        delQtyBtn: delQtyBtn\n      }, foodItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 47\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mt-3\",\n            children: [\"Total: \", total]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary float-right\",\n        onClick: () => {\n          navigate(\"/customer/address\");\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomerCart, \"yXJjHglYvqghVxIrHxiMHEh3j0E=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CustomerCart;\nexport default CustomerCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerCart\");","map":{"version":3,"sources":["D:/edited project/Frontend/src/Pages/Customer/CustomerCart/index.js"],"names":["axios","useEffect","useState","Link","FoodItemHorizontal","URL","useNavigate","CustomerCart","navigate","foodItemArray","foodItems","setFoodItems","foodItemMap","Map","JSON","parse","sessionStorage","total","setTotal","loadFoodItems","url","forEach","value","key","map","push","body","itemIds","post","then","response","result","data","status","cart","stringify","addQtyBtn","id","food","set","get","Array","from","entries","updateTotal","delQtyBtn","foodIdToDelete","undefined","delete","filter","tempTotal","foodItem","price","setTimeout","imagePath","name"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport FoodItemHorizontal from \"../../../Components/FoodItemHorizontal\";\r\nimport { URL } from '../../../config'\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst CustomerCart = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    let foodItemArray = [];\r\n    const [foodItems, setFoodItems] = useState([])\r\n    \r\n    let foodItemMap = new Map(JSON.parse(sessionStorage[\"foodItemMap\"]));\r\n    \r\n    const [total, setTotal] = useState(0.00);\r\n\r\n    const loadFoodItems = () => {\r\n        const url = `${URL}/fooditems/cart`\r\n        foodItemMap = new Map(JSON.parse(sessionStorage[\"foodItemMap\"]));\r\n\r\n        foodItemArray = [];\r\n        foodItemMap.forEach(((value, key, map) => {\r\n            foodItemArray.push(key);\r\n        }))\r\n\r\n        const body = {\r\n            itemIds: [...foodItemArray]\r\n        }\r\n\r\n        axios.post(url, body).then(response => {\r\n            const result = response.data;\r\n            if(result.status === \"SUCCESS\") {\r\n                const cart = result.data;\r\n                sessionStorage[\"sessionCart\"] = JSON.stringify(cart);\r\n                setFoodItems(cart);\r\n            }\r\n        })\r\n    }\r\n\r\n    const addQtyBtn = (id) => {\r\n\r\n        // get data from session\r\n        const cart = JSON.parse(sessionStorage[\"sessionCart\"]);\r\n        foodItemMap = new Map(JSON.parse(sessionStorage[\"foodItemMap\"]));\r\n\r\n        // add quantity\r\n        cart.forEach(food => {\r\n            if(food.id === id) {\r\n                foodItemMap.set(id, foodItemMap.get(id) + 1);\r\n            }\r\n        });\r\n\r\n        sessionStorage[\"sessionCart\"] = JSON.stringify(cart);\r\n        sessionStorage[\"foodItemMap\"] = JSON.stringify(Array.from(foodItemMap.entries()));\r\n        setFoodItems(cart);\r\n\r\n        // triggers\r\n        // update total\r\n        updateTotal();\r\n    }\r\n\r\n    const delQtyBtn = (id) => {\r\n        let cart = JSON.parse(sessionStorage[\"sessionCart\"]);\r\n        let foodIdToDelete = undefined;\r\n\r\n        foodItemMap = new Map(JSON.parse(sessionStorage[\"foodItemMap\"])); // get map\r\n\r\n        cart.forEach(food => {\r\n            if(food.id === id) {\r\n                // food.quantity = food.quantity - 1;\r\n                foodItemMap.set(id, foodItemMap.get(id) - 1);\r\n                if(foodItemMap.get(id) <= 0) { // if qty <= 0\r\n                    foodIdToDelete = food.id; // store for later, to remove from cart\r\n                    foodItemMap.delete(id); // remove from map\r\n                }\r\n            }\r\n        });\r\n        if(foodIdToDelete){ // remove from cart (if qty < 0, this value is set)\r\n            cart = cart.filter(food => !(food.id===foodIdToDelete))\r\n        }\r\n        \r\n        // save in session\r\n        sessionStorage[\"foodItemMap\"] = JSON.stringify(Array.from(foodItemMap.entries()));\r\n        sessionStorage[\"sessionCart\"] = JSON.stringify(cart);\r\n        setFoodItems(cart); // update state of cart\r\n\r\n        // triggers\r\n        // update total\r\n        updateTotal();\r\n    }\r\n\r\n    const updateTotal = () => {\r\n        // reset count\r\n        setTotal(0.0);\r\n\r\n        // get items from session\r\n        let cart = JSON.parse(sessionStorage[\"sessionCart\"]);\r\n        foodItemMap = new Map(JSON.parse(sessionStorage[\"foodItemMap\"])); // get map\r\n\r\n        // calculate total\r\n        let tempTotal = 0.0;\r\n        cart.forEach(foodItem => {\r\n            tempTotal += foodItemMap.get(foodItem.id) * foodItem.price; // qty * price\r\n        })\r\n\r\n        // set total\r\n        setTotal(tempTotal);\r\n    }\r\n\r\n    useEffect ( () => {\r\n        loadFoodItems();\r\n        setTimeout(updateTotal, 1000);\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h2>Cart</h2>\r\n            {(sessionStorage[\"foodItemMap\"] === null) || (sessionStorage[\"foodItemMap\"] === undefined) || (sessionStorage[\"foodItemMap\"] === \"[]\") ? \r\n                <div className=\"mt-4\">\r\n                    Your cart is empty. Add some food items to cart to continue. <br />\r\n                    <Link to=\"/customer/home\"><button className=\"btn btn-primary mt-3\">Browse restaurants</button></Link>\r\n                </div> :\r\n\r\n                // FoodItemHorizontal container\r\n                <div>\r\n                    {\r\n                    foodItems.map(foodItem => <FoodItemHorizontal\r\n                        key={foodItem.id}\r\n                        id={foodItem.id}\r\n                        imagePath={foodItem.imagePath}\r\n                        name={foodItem.name}\r\n                        quantity={foodItemMap.get(foodItem.id)}\r\n                        displayQuantityCounter={true}\r\n                        price={foodItem.price}\r\n                        displayEdit={false}\r\n                        addQtyBtn={addQtyBtn}\r\n                        delQtyBtn={delQtyBtn}\r\n                    />\r\n                    )}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h5 className=\"mt-3\">Total: {total}</h5>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn btn-primary float-right\" onClick={() => {navigate(\"/customer/address\")}}>Next</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default CustomerCart"]},"metadata":{},"sourceType":"module"}