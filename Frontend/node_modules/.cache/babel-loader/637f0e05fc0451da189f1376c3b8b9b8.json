{"ast":null,"code":"var _jsxFileName = \"D:\\\\edited project\\\\Frontend\\\\src\\\\Pages\\\\DeliveryPerson\\\\DpAllOrders\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport DpOrder from \"../../../Components/DpOrder\";\nimport { URL } from '../../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeliveryPersonAllOrders = () => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const deliveryPersonId = sessionStorage[\"id\"];\n\n  const loadOrders = () => {\n    const url = `${URL}/orders/deliveryperson/${deliveryPersonId}`;\n    axios.get(url).then(response => {\n      const result = response.data;\n\n      if (result.status === \"SUCCESS\") {\n        setOrders(result.data);\n      } else {\n        toast.error(\"Could not fetch orders\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: orders.map(order => /*#__PURE__*/_jsxDEV(DpOrder, {\n      orderId: order.orderId,\n      restaurantName: order.restaurantName,\n      restaurantAddress: order.restaurantAddress,\n      restaurantPinCode: order.restaurantPinCode,\n      customerName: order.customerName,\n      customerAddress: order.customerAddress,\n      customerPinCode: order.customerPinCode\n    }, order.orderId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 37\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeliveryPersonAllOrders, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n\n_c = DeliveryPersonAllOrders;\nexport default DeliveryPersonAllOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryPersonAllOrders\");","map":{"version":3,"sources":["D:/edited project/Frontend/src/Pages/DeliveryPerson/DpAllOrders/index.js"],"names":["axios","useEffect","useState","toast","DpOrder","URL","DeliveryPersonAllOrders","orders","setOrders","deliveryPersonId","sessionStorage","loadOrders","url","get","then","response","result","data","status","error","map","order","orderId","restaurantName","restaurantAddress","restaurantPinCode","customerName","customerAddress","customerPinCode"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,GAAT,QAAoB,iBAApB;;;AAEA,MAAMC,uBAAuB,GAAG,MAAM;AAAA;;AAClC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMO,gBAAgB,GAAGC,cAAc,CAAC,IAAD,CAAvC;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACrB,UAAMC,GAAG,GAAI,GAAEP,GAAI,0BAAyBI,gBAAiB,EAA7D;AACAT,IAAAA,KAAK,CAACa,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,QAAQ,IAAI;AAC5B,YAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAxB;;AACA,UAAGD,MAAM,CAACE,MAAP,KAAkB,SAArB,EAAgC;AAC5BV,QAAAA,SAAS,CAACQ,MAAM,CAACC,IAAR,CAAT;AACH,OAFD,MAEO;AACHd,QAAAA,KAAK,CAACgB,KAAN,CAAY,wBAAZ;AACH;AACJ,KAPD;AAQH,GAVD;;AAYAlB,EAAAA,SAAS,CAAE,MAAM;AACbU,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,cAEQJ,MAAM,CAACa,GAAP,CAAWC,KAAK,iBAAI,QAAC,OAAD;AAEhB,MAAA,OAAO,EAAEA,KAAK,CAACC,OAFC;AAGhB,MAAA,cAAc,EAAED,KAAK,CAACE,cAHN;AAIhB,MAAA,iBAAiB,EAAEF,KAAK,CAACG,iBAJT;AAKhB,MAAA,iBAAiB,EAAEH,KAAK,CAACI,iBALT;AAMhB,MAAA,YAAY,EAAEJ,KAAK,CAACK,YANJ;AAOhB,MAAA,eAAe,EAAEL,KAAK,CAACM,eAPP;AAQhB,MAAA,eAAe,EAAEN,KAAK,CAACO;AARP,OACXP,KAAK,CAACC,OADK;AAAA;AAAA;AAAA;AAAA,YAApB;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CApCD;;GAAMhB,uB;;KAAAA,uB;AAsCN,eAAeA,uBAAf","sourcesContent":["import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { toast } from \"react-toastify\"\r\nimport DpOrder from \"../../../Components/DpOrder\"\r\nimport { URL } from '../../../config'\r\n\r\nconst DeliveryPersonAllOrders = () => {\r\n    const [orders, setOrders] = useState([])\r\n    const deliveryPersonId = sessionStorage[\"id\"]\r\n\r\n    const loadOrders = () => {\r\n        const url = `${URL}/orders/deliveryperson/${deliveryPersonId}`\r\n        axios.get(url).then(response => {\r\n            const result = response.data;\r\n            if(result.status === \"SUCCESS\") {\r\n                setOrders(result.data)\r\n            } else {\r\n                toast.error(\"Could not fetch orders\")\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect( () => {\r\n        loadOrders();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                orders.map(order => <DpOrder \r\n                    key={order.orderId}\r\n                    orderId={order.orderId}\r\n                    restaurantName={order.restaurantName}\r\n                    restaurantAddress={order.restaurantAddress}\r\n                    restaurantPinCode={order.restaurantPinCode}\r\n                    customerName={order.customerName}\r\n                    customerAddress={order.customerAddress}\r\n                    customerPinCode={order.customerPinCode}\r\n                />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeliveryPersonAllOrders"]},"metadata":{},"sourceType":"module"}