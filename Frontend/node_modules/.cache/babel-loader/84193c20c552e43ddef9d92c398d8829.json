{"ast":null,"code":"var _jsxFileName = \"D:\\\\edited project\\\\Frontend\\\\src\\\\Pages\\\\Restaurant Manager\\\\ManagerAddFoodItem\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport Swal from 'sweetalert2';\nimport RestaurantManagerHeader from '../../../Components/RestaurantManagerHeader';\nimport { URL } from '../../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  foodName: Yup.string().required('Item Name is required'),\n  price: Yup.number().required('Price is required').positive('Price must be positive'),\n  imagePath: Yup.string().required('Image URL is required')\n});\n\nconst ManagerAddFoodItem = () => {\n  _s();\n\n  const restaurantName = sessionStorage['restaurantName'];\n  const name = sessionStorage['name'];\n  const restaurantId = sessionStorage['restaurantId'];\n  const [foodTypes, setFoodTypes] = useState([]);\n  const navigate = useNavigate();\n\n  const addFoodItem = async values => {\n    const {\n      foodName,\n      foodTypeId,\n      price,\n      imagePath,\n      isVegetarian\n    } = values;\n\n    try {\n      const response = await axios.post(`${URL}/restaurantmanager/addfooditem`, {\n        foodTypeId,\n        restaurantId,\n        name: foodName,\n        price,\n        imagePath,\n        vegetarian: isVegetarian\n      });\n      const result = response.data;\n\n      if (result.status === 'SUCCESS') {\n        toast.success('Food item added successfully');\n        navigate('/manager/restaurantmenu');\n      } else {\n        toast.error(result.message);\n      }\n    } catch (error) {\n      toast.error('Error adding food item');\n    }\n  };\n\n  const getFoodTypes = async () => {\n    try {\n      const response = await axios.get(`${URL}/foodtypes`);\n      const result = response.data;\n\n      if (result.status === 'SUCCESS') {\n        setFoodTypes(result.data);\n      } else {\n        toast.error('Error fetching food types');\n      }\n    } catch (error) {\n      toast.error('Error fetching food types');\n    }\n  };\n\n  useEffect(() => {\n    getFoodTypes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RestaurantManagerHeader, {\n      restaurantName: restaurantName,\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Food Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        foodName: '',\n        foodTypeId: '',\n        price: '',\n        imagePath: '',\n        isVegetarian: false\n      },\n      validationSchema: validationSchema,\n      onSubmit: addFoodItem,\n      children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"foodName\",\n                  className: \"label-control\",\n                  children: \"Item Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"foodName\",\n                  type: \"text\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"foodName\",\n                  component: \"div\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"foodTypeId\",\n                  className: \"label-control\",\n                  children: \"Food Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"foodTypeId\",\n                  as: \"select\",\n                  className: \"form-control\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"-- Select an option --\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 23\n                  }, this), foodTypes.map(foodType => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: foodType.id,\n                    children: foodType.name\n                  }, foodType.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"foodTypeId\",\n                  component: \"div\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"price\",\n                  className: \"label-control\",\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"price\",\n                  type: \"number\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"price\",\n                  component: \"div\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"imagePath\",\n                  className: \"label-control\",\n                  children: \"Image URL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"imagePath\",\n                  type: \"text\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"imagePath\",\n                  component: \"div\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"isVegetarian\",\n                  className: \"label-control\",\n                  children: \"Is Vegetarian clic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"checkbox\",\n                  name: \"isVegetarian\",\n                  className: \"form-check-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-outline-primary\",\n                    onClick: () => {\n                      navigate('/manager/restaurantmenu');\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3 float-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary\",\n                    children: \"Add Item\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ManagerAddFoodItem, \"JTjogR95AYCH8eAkBIOV94055Ks=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ManagerAddFoodItem;\nexport default ManagerAddFoodItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagerAddFoodItem\");","map":{"version":3,"sources":["D:/edited project/Frontend/src/Pages/Restaurant Manager/ManagerAddFoodItem/index.js"],"names":["React","useEffect","useState","useNavigate","Formik","Form","Field","ErrorMessage","Yup","axios","toast","Swal","RestaurantManagerHeader","URL","validationSchema","object","foodName","string","required","price","number","positive","imagePath","ManagerAddFoodItem","restaurantName","sessionStorage","name","restaurantId","foodTypes","setFoodTypes","navigate","addFoodItem","values","foodTypeId","isVegetarian","response","post","vegetarian","result","data","status","success","error","message","getFoodTypes","get","formikProps","map","foodType","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport Swal from 'sweetalert2';\r\nimport RestaurantManagerHeader from '../../../Components/RestaurantManagerHeader';\r\nimport { URL } from '../../../config';\r\n\r\nconst validationSchema = Yup.object({\r\n  foodName: Yup.string().required('Item Name is required'),\r\n  price: Yup.number().required('Price is required').positive('Price must be positive'),\r\n  imagePath: Yup.string().required('Image URL is required'),\r\n});\r\n\r\nconst ManagerAddFoodItem = () => {\r\n  const restaurantName = sessionStorage['restaurantName'];\r\n  const name = sessionStorage['name'];\r\n  const restaurantId = sessionStorage['restaurantId'];\r\n  const [foodTypes, setFoodTypes] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const addFoodItem = async (values) => {\r\n    const { foodName, foodTypeId, price, imagePath, isVegetarian } = values;\r\n\r\n    try {\r\n      const response = await axios.post(`${URL}/restaurantmanager/addfooditem`, {\r\n        foodTypeId,\r\n        restaurantId,\r\n        name: foodName,\r\n        price,\r\n        imagePath,\r\n        vegetarian: isVegetarian,\r\n      });\r\n\r\n      const result = response.data;\r\n      if (result.status === 'SUCCESS') {\r\n        toast.success('Food item added successfully');\r\n        navigate('/manager/restaurantmenu');\r\n      } else {\r\n        toast.error(result.message);\r\n      }\r\n    } catch (error) {\r\n      toast.error('Error adding food item');\r\n    }\r\n  };\r\n\r\n  const getFoodTypes = async () => {\r\n    try {\r\n      const response = await axios.get(`${URL}/foodtypes`);\r\n      const result = response.data;\r\n      \r\n      \r\n      if (result.status === 'SUCCESS') {\r\n        setFoodTypes(result.data);\r\n      } else {\r\n        toast.error('Error fetching food types');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Error fetching food types');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFoodTypes();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <RestaurantManagerHeader restaurantName={restaurantName} name={name} />\r\n\r\n      <h3>Add Food Item</h3>\r\n\r\n      <Formik\r\n        initialValues={{\r\n          foodName: '',\r\n          foodTypeId: '',\r\n          price: '',\r\n          imagePath: '',\r\n          isVegetarian: false,\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={addFoodItem}\r\n      >\r\n        {(formikProps) => (\r\n          <Form>\r\n            <div className=\"row\">\r\n              <div className=\"col\"></div>\r\n              <div className=\"col\">\r\n                <div className=\"form\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"foodName\" className=\"label-control\">\r\n                      Item Name\r\n                    </label>\r\n                    <Field\r\n                      name=\"foodName\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"foodName\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"foodTypeId\" className=\"label-control\">\r\n                      Food Type\r\n                    </label>\r\n                    <Field\r\n                      name=\"foodTypeId\"\r\n                      as=\"select\"\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option value=\"\">-- Select an option --</option>\r\n                      {foodTypes.map((foodType) => (\r\n                        <option key={foodType.id} value={foodType.id}>\r\n                          {foodType.name}\r\n                        </option>\r\n                      ))}\r\n                    </Field>\r\n                    <ErrorMessage\r\n                      name=\"foodTypeId\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"price\" className=\"label-control\">\r\n                      Price\r\n                    </label>\r\n                    <Field name=\"price\" type=\"number\" className=\"form-control\" />\r\n                    <ErrorMessage\r\n                      name=\"price\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"imagePath\" className=\"label-control\">\r\n                      Image URL\r\n                    </label>\r\n                    <Field\r\n                      name=\"imagePath\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"imagePath\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"isVegetarian\" className=\"label-control\">\r\n                      Is Vegetarian clic\r\n                    </label>\r\n                    <Field\r\n                      type=\"checkbox\"\r\n                      name=\"isVegetarian\"\r\n                      className=\"form-check-input\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <div className=\"mb-3\">\r\n                      <button\r\n                        className=\"btn btn-outline-primary\"\r\n                        onClick={() => {\r\n                          navigate('/manager/restaurantmenu');\r\n                        }}\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"mb-3 float-right\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                      >\r\n                        Add Item\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col\"></div>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManagerAddFoodItem;\r\n\r\n"]},"metadata":{},"sourceType":"module"}