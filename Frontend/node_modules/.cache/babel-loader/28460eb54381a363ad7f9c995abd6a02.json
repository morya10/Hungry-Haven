{"ast":null,"code":"var _jsxFileName = \"D:\\\\edited project\\\\Frontend\\\\src\\\\Pages\\\\Customer\\\\CustomerPayment\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { toast } from 'react-toastify';\nimport { URL } from '../../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  cardNumber: Yup.string().min(12, 'card number should be 12 charecter ').required('Card Number is required'),\n  expiry: Yup.string().required('Expiry is Year required'),\n  nameOnTheCard: Yup.string().required('Name on the Card is required'),\n  cvv: Yup.number().min(3, 'CVV is 3 digit').required('CVV is required')\n});\n\nconst CustomerPayment = () => {\n  _s();\n\n  const navigate = useNavigate();\n\n  const handleOrderPlacement = values => {\n    if (validateCard(values)) {\n      let sessionCart = JSON.parse(sessionStorage['sessionCart']);\n      let foodItemMap = new Map(JSON.parse(sessionStorage['foodItemMap']));\n      const url = `${URL}/orders/place`;\n      let foodItemsInOrder = processFoodItemsArray(sessionCart, foodItemMap);\n      let restaurantId = sessionStorage['restaurantId'];\n      let customerId = sessionStorage['id'];\n      const body = {\n        foodItemsInOrder,\n        restaurantId,\n        customerId\n      };\n      axios.post(url, body).then(response => {\n        const result = response.data;\n\n        if (result.status === 'SUCCESS') {\n          toast.success('Order successfully placed. Order Id: ' + result.data.orderId);\n          sessionStorage['foodItemMap'] = '[]';\n          sessionStorage['sessionCart'] = '[]';\n          sessionStorage.removeItem('restaurantId');\n          Swal.fire({\n            icon: 'success',\n            title: 'Order Placed',\n            text: `Order successfully placed. Order Id: ${result.data.orderId}`\n          }).then(() => {\n            navigate('/customer/orders');\n          });\n        } else {\n          toast.error('Couldn\\'t place order');\n        }\n      }).catch(error => {\n        toast.error('An error occurred while placing the order.');\n        console.error(error);\n      });\n    } else {\n      toast.error('Please enter all details');\n    }\n  };\n\n  const validateCard = values => {\n    if (values.cardNumber === '' || values.expiry === '' || values.nameOnTheCard === '' || values.cvv === 0) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const processFoodItemsArray = (sessionCart, foodItemMap) => {\n    let foodItemsInOrder = [];\n    sessionCart.forEach(item => {\n      let foodItem = {};\n      foodItem.foodItemId = item.id;\n      foodItem.foodName = item.name;\n      foodItem.foodPrice = item.price;\n      foodItem.foodQuantity = foodItemMap.get(item.id);\n      foodItemsInOrder.push(foodItem);\n    });\n    return foodItemsInOrder;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        cardNumber: '',\n        expiry: '',\n        nameOnTheCard: '',\n        cvv: 0\n      },\n      validationSchema: validationSchema,\n      onSubmit: handleOrderPlacement,\n      children: _ref => {\n        let {\n          errors,\n          touched\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"cardNumber\",\n                    className: \"label-control\",\n                    children: \"Card Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    type: \"text\",\n                    name: \"cardNumber\",\n                    className: \"form-control\",\n                    id: \"cardNumber\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"cardNumber\",\n                    component: \"div\",\n                    className: \"text-danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"expiry\",\n                    className: \"label-control\",\n                    children: \"Expiry\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    type: \"text\",\n                    name: \"expiry\",\n                    className: \"form-control\",\n                    id: \"expiry\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"expiry\",\n                    component: \"div\",\n                    className: \"text-danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"nameOnTheCard\",\n                    className: \"label-control\",\n                    children: \"Name On The Card\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    type: \"text\",\n                    name: \"nameOnTheCard\",\n                    className: \"form-control\",\n                    id: \"nameOnTheCard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"nameOnTheCard\",\n                    component: \"div\",\n                    className: \"text-danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"cvv\",\n                    className: \"label-control\",\n                    children: \"CVV\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    type: \"number\",\n                    name: \"cvv\",\n                    className: \"form-control\",\n                    id: \"cvv\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"cvv\",\n                    component: \"div\",\n                    className: \"text-danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-primary\",\n              onClick: () => {\n                navigate('/customer/address');\n              },\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary float-right\",\n              children: \"Place Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerPayment, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CustomerPayment;\nexport default CustomerPayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerPayment\");","map":{"version":3,"sources":["D:/edited project/Frontend/src/Pages/Customer/CustomerPayment/index.js"],"names":["Formik","Form","Field","ErrorMessage","Yup","Swal","axios","useState","useNavigate","toast","URL","validationSchema","object","cardNumber","string","min","required","expiry","nameOnTheCard","cvv","number","CustomerPayment","navigate","handleOrderPlacement","values","validateCard","sessionCart","JSON","parse","sessionStorage","foodItemMap","Map","url","foodItemsInOrder","processFoodItemsArray","restaurantId","customerId","body","post","then","response","result","data","status","success","orderId","removeItem","fire","icon","title","text","error","catch","console","forEach","item","foodItem","foodItemId","id","foodName","name","foodPrice","price","foodQuantity","get","push","errors","touched"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,gBAAgB,GAAGP,GAAG,CAACQ,MAAJ,CAAW;AAClCC,EAAAA,UAAU,EAAET,GAAG,CAACU,MAAJ,GAAaC,GAAb,CAAiB,EAAjB,EAAoB,qCAApB,EAA2DC,QAA3D,CAAoE,yBAApE,CADsB;AAElCC,EAAAA,MAAM,EAAEb,GAAG,CAACU,MAAJ,GAAaE,QAAb,CAAsB,yBAAtB,CAF0B;AAGlCE,EAAAA,aAAa,EAAEd,GAAG,CAACU,MAAJ,GAAaE,QAAb,CAAsB,8BAAtB,CAHmB;AAIlCG,EAAAA,GAAG,EAAEf,GAAG,CAACgB,MAAJ,GAAaL,GAAb,CAAiB,CAAjB,EAAmB,gBAAnB,EAAqCC,QAArC,CAA8C,iBAA9C;AAJ6B,CAAX,CAAzB;;AAOA,MAAMK,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,oBAAoB,GAAIC,MAAD,IAAY;AACvC,QAAIC,YAAY,CAACD,MAAD,CAAhB,EAA0B;AACxB,UAAIE,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAAC,aAAD,CAAzB,CAAlB;AACA,UAAIC,WAAW,GAAG,IAAIC,GAAJ,CAAQJ,IAAI,CAACC,KAAL,CAAWC,cAAc,CAAC,aAAD,CAAzB,CAAR,CAAlB;AAEA,YAAMG,GAAG,GAAI,GAAEtB,GAAI,eAAnB;AACA,UAAIuB,gBAAgB,GAAGC,qBAAqB,CAACR,WAAD,EAAcI,WAAd,CAA5C;AACA,UAAIK,YAAY,GAAGN,cAAc,CAAC,cAAD,CAAjC;AACA,UAAIO,UAAU,GAAGP,cAAc,CAAC,IAAD,CAA/B;AAEA,YAAMQ,IAAI,GAAG;AACXJ,QAAAA,gBADW;AAEXE,QAAAA,YAFW;AAGXC,QAAAA;AAHW,OAAb;AAMA9B,MAAAA,KAAK,CAACgC,IAAN,CAAWN,GAAX,EAAgBK,IAAhB,EACGE,IADH,CACSC,QAAD,IAAc;AAClB,cAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAxB;;AACA,YAAID,MAAM,CAACE,MAAP,KAAkB,SAAtB,EAAiC;AAC/BlC,UAAAA,KAAK,CAACmC,OAAN,CAAc,0CAA0CH,MAAM,CAACC,IAAP,CAAYG,OAApE;AAEAhB,UAAAA,cAAc,CAAC,aAAD,CAAd,GAAgC,IAAhC;AACAA,UAAAA,cAAc,CAAC,aAAD,CAAd,GAAgC,IAAhC;AACAA,UAAAA,cAAc,CAACiB,UAAf,CAA0B,cAA1B;AAEAzC,UAAAA,IAAI,CAAC0C,IAAL,CAAU;AACRC,YAAAA,IAAI,EAAE,SADE;AAERC,YAAAA,KAAK,EAAE,cAFC;AAGRC,YAAAA,IAAI,EAAG,wCAAuCT,MAAM,CAACC,IAAP,CAAYG,OAAQ;AAH1D,WAAV,EAIGN,IAJH,CAIQ,MAAM;AACZjB,YAAAA,QAAQ,CAAC,kBAAD,CAAR;AACD,WAND;AAOD,SAdD,MAcO;AACLb,UAAAA,KAAK,CAAC0C,KAAN,CAAY,uBAAZ;AACD;AACF,OApBH,EAqBGC,KArBH,CAqBUD,KAAD,IAAW;AAChB1C,QAAAA,KAAK,CAAC0C,KAAN,CAAY,4CAAZ;AACAE,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD,OAxBH;AAyBD,KAxCD,MAwCO;AACL1C,MAAAA,KAAK,CAAC0C,KAAN,CAAY,0BAAZ;AACD;AACF,GA5CD;;AA8CA,QAAM1B,YAAY,GAAID,MAAD,IAAY;AAC/B,QACEA,MAAM,CAACX,UAAP,KAAsB,EAAtB,IACAW,MAAM,CAACP,MAAP,KAAkB,EADlB,IAEAO,MAAM,CAACN,aAAP,KAAyB,EAFzB,IAGAM,MAAM,CAACL,GAAP,KAAe,CAJjB,EAKE;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GAVD;;AAYA,QAAMe,qBAAqB,GAAG,CAACR,WAAD,EAAcI,WAAd,KAA8B;AAC1D,QAAIG,gBAAgB,GAAG,EAAvB;AACAP,IAAAA,WAAW,CAAC4B,OAAZ,CAAqBC,IAAD,IAAU;AAC5B,UAAIC,QAAQ,GAAG,EAAf;AACAA,MAAAA,QAAQ,CAACC,UAAT,GAAsBF,IAAI,CAACG,EAA3B;AACAF,MAAAA,QAAQ,CAACG,QAAT,GAAoBJ,IAAI,CAACK,IAAzB;AACAJ,MAAAA,QAAQ,CAACK,SAAT,GAAqBN,IAAI,CAACO,KAA1B;AACAN,MAAAA,QAAQ,CAACO,YAAT,GAAwBjC,WAAW,CAACkC,GAAZ,CAAgBT,IAAI,CAACG,EAArB,CAAxB;AACAzB,MAAAA,gBAAgB,CAACgC,IAAjB,CAAsBT,QAAtB;AACD,KAPD;AAQA,WAAOvB,gBAAP;AACD,GAXD;;AAaA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbpB,QAAAA,UAAU,EAAE,EADC;AAEbI,QAAAA,MAAM,EAAE,EAFK;AAGbC,QAAAA,aAAa,EAAE,EAHF;AAIbC,QAAAA,GAAG,EAAE;AAJQ,OADjB;AAOE,MAAA,gBAAgB,EAAER,gBAPpB;AAQE,MAAA,QAAQ,EAAEY,oBARZ;AAAA,gBAUG;AAAA,YAAC;AAAE2C,UAAAA,MAAF;AAAUC,UAAAA;AAAV,SAAD;AAAA,4BACC,QAAC,IAAD;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,MAAf;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,YAAf;AAA4B,oBAAA,SAAS,EAAC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,KAAD;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,IAAI,EAAC,YAFP;AAGE,oBAAA,SAAS,EAAC,cAHZ;AAIE,oBAAA,EAAE,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA,0BAJF,eAUE,QAAC,YAAD;AACE,oBAAA,IAAI,EAAC,YADP;AAEE,oBAAA,SAAS,EAAC,KAFZ;AAGE,oBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,0BAVF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAkBE;AAAK,kBAAA,SAAS,EAAC,MAAf;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,QAAf;AAAwB,oBAAA,SAAS,EAAC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,KAAD;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,IAAI,EAAC,QAFP;AAGE,oBAAA,SAAS,EAAC,cAHZ;AAIE,oBAAA,EAAE,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA,0BAJF,eAUE,QAAC,YAAD;AACE,oBAAA,IAAI,EAAC,QADP;AAEE,oBAAA,SAAS,EAAC,KAFZ;AAGE,oBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,0BAVF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlBF,eAmCE;AAAK,kBAAA,SAAS,EAAC,MAAf;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,eAAf;AAA+B,oBAAA,SAAS,EAAC,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,KAAD;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,IAAI,EAAC,eAFP;AAGE,oBAAA,SAAS,EAAC,cAHZ;AAIE,oBAAA,EAAE,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA,0BAJF,eAUE,QAAC,YAAD;AACE,oBAAA,IAAI,EAAC,eADP;AAEE,oBAAA,SAAS,EAAC,KAFZ;AAGE,oBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,0BAVF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAnCF,eAoDE;AAAK,kBAAA,SAAS,EAAC,MAAf;AAAA,0CACE;AAAO,oBAAA,OAAO,EAAC,KAAf;AAAqB,oBAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,KAAD;AACE,oBAAA,IAAI,EAAC,QADP;AAEE,oBAAA,IAAI,EAAC,KAFP;AAGE,oBAAA,SAAS,EAAC,cAHZ;AAIE,oBAAA,EAAE,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA,0BAJF,eAUE,QAAC,YAAD;AACE,oBAAA,IAAI,EAAC,KADP;AAEE,oBAAA,SAAS,EAAC,KAFZ;AAGE,oBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,0BAVF;AAAA;AAAA;AAAA;AAAA;AAAA,wBApDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF,eA0EE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBA1EF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA8EE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,yBADZ;AAEE,cAAA,OAAO,EAAE,MAAM;AACb7C,gBAAAA,QAAQ,CAAC,mBAAD,CAAR;AACD,eAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,6BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9EF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AAAA;AAVH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+GD,CAzLD;;GAAMD,e;UACab,W;;;KADba,e;AA2LN,eAAeA,eAAf","sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport { URL } from '../../../config';\r\n\r\nconst validationSchema = Yup.object({\r\n  cardNumber: Yup.string().min(12,'card number should be 12 charecter ').required('Card Number is required'),\r\n  expiry: Yup.string().required('Expiry is Year required'),\r\n  nameOnTheCard: Yup.string().required('Name on the Card is required'),\r\n  cvv: Yup.number().min(3,'CVV is 3 digit').required('CVV is required'),\r\n});\r\n\r\nconst CustomerPayment = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleOrderPlacement = (values) => {\r\n    if (validateCard(values)) {\r\n      let sessionCart = JSON.parse(sessionStorage['sessionCart']);\r\n      let foodItemMap = new Map(JSON.parse(sessionStorage['foodItemMap']));\r\n\r\n      const url = `${URL}/orders/place`;\r\n      let foodItemsInOrder = processFoodItemsArray(sessionCart, foodItemMap);\r\n      let restaurantId = sessionStorage['restaurantId'];\r\n      let customerId = sessionStorage['id'];\r\n\r\n      const body = {\r\n        foodItemsInOrder,\r\n        restaurantId,\r\n        customerId,\r\n      };\r\n\r\n      axios.post(url, body)\r\n        .then((response) => {\r\n          const result = response.data;\r\n          if (result.status === 'SUCCESS') {\r\n            toast.success('Order successfully placed. Order Id: ' + result.data.orderId);\r\n\r\n            sessionStorage['foodItemMap'] = '[]';\r\n            sessionStorage['sessionCart'] = '[]';\r\n            sessionStorage.removeItem('restaurantId');\r\n\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Order Placed',\r\n              text: `Order successfully placed. Order Id: ${result.data.orderId}`,\r\n            }).then(() => {\r\n              navigate('/customer/orders');\r\n            });\r\n          } else {\r\n            toast.error('Couldn\\'t place order');\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          toast.error('An error occurred while placing the order.');\r\n          console.error(error);\r\n        });\r\n    } else {\r\n      toast.error('Please enter all details');\r\n    }\r\n  };\r\n\r\n  const validateCard = (values) => {\r\n    if (\r\n      values.cardNumber === '' ||\r\n      values.expiry === '' ||\r\n      values.nameOnTheCard === '' ||\r\n      values.cvv === 0\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const processFoodItemsArray = (sessionCart, foodItemMap) => {\r\n    let foodItemsInOrder = [];\r\n    sessionCart.forEach((item) => {\r\n      let foodItem = {};\r\n      foodItem.foodItemId = item.id;\r\n      foodItem.foodName = item.name;\r\n      foodItem.foodPrice = item.price;\r\n      foodItem.foodQuantity = foodItemMap.get(item.id);\r\n      foodItemsInOrder.push(foodItem);\r\n    });\r\n    return foodItemsInOrder;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"title\">Payment</h2>\r\n\r\n      <Formik\r\n        initialValues={{\r\n          cardNumber: '',\r\n          expiry: '',\r\n          nameOnTheCard: '',\r\n          cvv: 0,\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleOrderPlacement}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <div className=\"row\">\r\n              <div className=\"col\"></div>\r\n              <div className=\"col\">\r\n                <div className=\"form\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"cardNumber\" className=\"label-control\">\r\n                      Card Number\r\n                    </label>\r\n                    <Field\r\n                      type=\"text\"\r\n                      name=\"cardNumber\"\r\n                      className=\"form-control\"\r\n                      id=\"cardNumber\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"cardNumber\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"expiry\" className=\"label-control\">\r\n                      Expiry\r\n                    </label>\r\n                    <Field\r\n                      type=\"text\"\r\n                      name=\"expiry\"\r\n                      className=\"form-control\"\r\n                      id=\"expiry\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"expiry\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"nameOnTheCard\" className=\"label-control\">\r\n                      Name On The Card\r\n                    </label>\r\n                    <Field\r\n                      type=\"text\"\r\n                      name=\"nameOnTheCard\"\r\n                      className=\"form-control\"\r\n                      id=\"nameOnTheCard\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"nameOnTheCard\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"cvv\" className=\"label-control\">\r\n                      CVV\r\n                    </label>\r\n                    <Field\r\n                      type=\"number\"\r\n                      name=\"cvv\"\r\n                      className=\"form-control\"\r\n                      id=\"cvv\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"cvv\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n              <div className=\"col\"></div>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <button\r\n                className=\"btn btn-outline-primary\"\r\n                onClick={() => {\r\n                  navigate('/customer/address');\r\n                }}\r\n              >\r\n                Previous\r\n              </button>\r\n              <button type=\"submit\" className=\"btn btn-primary float-right\">\r\n                Place Order\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerPayment;\r\n"]},"metadata":{},"sourceType":"module"}