{"ast":null,"code":"var _jsxFileName = \"D:\\\\edited project\\\\Frontend\\\\src\\\\Pages\\\\Restaurant Manager\\\\ManagerEditFoodItem\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport RestaurantManagerHeader from \"../../../Components/RestaurantManagerHeader\";\nimport { URL } from '../../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ManagerEditFoodItem = () => {\n  _s();\n\n  const restaurantName = sessionStorage['restaurantName'];\n  const name = sessionStorage['name'];\n  const {\n    state\n  } = useLocation();\n  const foodItemId = state.foodItemId;\n  const restaurantId = sessionStorage[\"restaurantId\"];\n  const [foodName, setFoodName] = useState(\"\");\n  const [foodTypes, setFoodTypes] = useState([]);\n  const [foodTypeId, setFoodTypeId] = useState(0);\n  const [price, setPrice] = useState(0.00);\n  const [imagePath, setImagePath] = useState(\"\");\n  const [isVegetarian, setIsVegetarian] = useState(false);\n  const navigate = useNavigate();\n\n  const getFoodItem = () => {\n    const url = `${URL}/foodTypes/edit/${foodItemId}`;\n    axios.get(url).then(response => {\n      const result = response.data;\n\n      if (result.status === \"SUCCESS\") {\n        setFoodTypes(result.data[1]);\n        setFoodName(result.data[0].name);\n        setFoodTypeId(result.data[0].foodTypeId);\n        setPrice(result.data[0].price);\n        setImagePath(result.data[0].imagePath);\n        setIsVegetarian(result.data[0].vegetarian);\n      }\n    });\n  };\n\n  const updateFoodItem = () => {\n    const url = `${URL}/foodTypes/edit/${foodItemId}`;\n    const body = {\n      id: foodItemId,\n      foodTypeId: foodTypeId,\n      restaurantId: restaurantId,\n      name: foodName,\n      price: price,\n      imagePath: imagePath,\n      vegetarian: isVegetarian\n    }; // console.log(body);\n\n    axios.post(url, body).then(response => {\n      const result = response.data;\n\n      if (result.status === \"SUCCESS\") {\n        toast.success(\"Food item edited successfully\");\n        navigate(\"/manager/restaurantmenu\");\n      } else {\n        toast.error(result.message);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getFoodItem();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RestaurantManagerHeader, {\n      restaurantName: restaurantName,\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Food Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"foodName\",\n              className: \"label-control\",\n              children: \"Item Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setFoodName(e.target.value),\n              value: foodName,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"foodTypeId\",\n              className: \"label-control\",\n              children: \"Food Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select form-control\",\n              onChange: e => setFoodTypeId(e.target.value),\n              value: foodTypeId,\n              children: foodTypes.map(foodType => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: foodType.id,\n                children: foodType.name\n              }, foodType.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"price\",\n              className: \"label-control\",\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setPrice(e.target.value),\n              value: price,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"imagePath\",\n              className: \"label-control\",\n              children: \"Image URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setImagePath(e.target.value),\n              value: imagePath,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"isVegetarian\",\n              className: \"label-control\",\n              children: \"Is Vegetarian\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: e => setIsVegetarian(e.target.checked),\n              value: isVegetarian,\n              className: \"form-control\",\n              checked: isVegetarian\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary\",\n                onClick: () => {\n                  navigate(\"/manager/restaurantmenu\");\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 float-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: () => {\n                  updateFoodItem();\n                },\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ManagerEditFoodItem, \"M3cQ1v1rPB5oRjLoc9ReqCdUcUQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = ManagerEditFoodItem;\nexport default ManagerEditFoodItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagerEditFoodItem\");","map":{"version":3,"sources":["D:/edited project/Frontend/src/Pages/Restaurant Manager/ManagerEditFoodItem/index.js"],"names":["axios","useEffect","useState","useLocation","useNavigate","toast","RestaurantManagerHeader","URL","ManagerEditFoodItem","restaurantName","sessionStorage","name","state","foodItemId","restaurantId","foodName","setFoodName","foodTypes","setFoodTypes","foodTypeId","setFoodTypeId","price","setPrice","imagePath","setImagePath","isVegetarian","setIsVegetarian","navigate","getFoodItem","url","get","then","response","result","data","status","vegetarian","updateFoodItem","body","id","post","success","error","message","e","target","value","map","foodType","checked"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport RestaurantManagerHeader from \"../../../Components/RestaurantManagerHeader\";\r\nimport { URL } from '../../../config'\r\n\r\nconst ManagerEditFoodItem = () => {\r\n    const restaurantName = sessionStorage['restaurantName'];\r\n    const name = sessionStorage['name'];\r\n\r\n    const { state } = useLocation()\r\n    const foodItemId = state.foodItemId;\r\n    const restaurantId = sessionStorage[\"restaurantId\"];\r\n    const [foodName, setFoodName] = useState(\"\");\r\n    const [foodTypes, setFoodTypes] = useState([]);\r\n    const [foodTypeId, setFoodTypeId] = useState(0);\r\n    const [price, setPrice] = useState(0.00);\r\n    const [imagePath, setImagePath] = useState(\"\");\r\n    const [isVegetarian, setIsVegetarian] = useState(false); \r\n\r\n    const navigate = useNavigate();\r\n\r\n    const getFoodItem = () => {\r\n        const url = `${URL}/foodTypes/edit/${foodItemId}`\r\n        axios.get(url).then(response => {\r\n            const result = response.data;\r\n            if(result.status === \"SUCCESS\") {\r\n                setFoodTypes(result.data[1]);\r\n\r\n                setFoodName(result.data[0].name);\r\n                setFoodTypeId(result.data[0].foodTypeId);\r\n                setPrice(result.data[0].price);\r\n                setImagePath(result.data[0].imagePath);\r\n                setIsVegetarian(result.data[0].vegetarian);\r\n            }\r\n        })\r\n    }\r\n\r\n    const updateFoodItem = () => {\r\n        const url = `${URL}/foodTypes/edit/${foodItemId}`\r\n        const body = {\r\n            id: foodItemId,\r\n            foodTypeId: foodTypeId,\r\n            restaurantId: restaurantId,\r\n            name: foodName,\r\n            price: price,\r\n            imagePath: imagePath,\r\n            vegetarian: isVegetarian\r\n        }\r\n\r\n        // console.log(body);\r\n        axios.post(url, body).then(response => {\r\n            const result = response.data;\r\n            if(result.status === \"SUCCESS\") {\r\n                toast.success(\"Food item edited successfully\");\r\n                navigate(\"/manager/restaurantmenu\");\r\n            } else {\r\n                toast.error(result.message);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=> {\r\n        getFoodItem();\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <RestaurantManagerHeader \r\n                restaurantName ={restaurantName}\r\n                name={name}\r\n            />\r\n\r\n            <h3>Edit Food Item</h3>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\"></div>\r\n                <div className=\"col\">\r\n                    <div className=\"form\">\r\n\r\n                        {/* name */}\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"foodName\" className=\"label-control\">\r\n                                Item Name\r\n                            </label>\r\n                            <input type=\"text\" onChange={ (e) => setFoodName(e.target.value) } value={foodName} className=\"form-control\" />\r\n                        </div>\r\n\r\n                        {/* food type */}\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"foodTypeId\" className=\"label-control\">\r\n                                Food Type\r\n                            </label>\r\n\r\n                            <select className=\"form-select form-control\"\r\n                                onChange={ (e) => setFoodTypeId(e.target.value) }\r\n                                value={foodTypeId}\r\n                                >\r\n                                {\r\n                                    foodTypes.map(foodType => \r\n                                        <option value={foodType.id} key={foodType.id}>\r\n                                            {foodType.name}\r\n                                        </option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n\r\n                        </div>\r\n\r\n                        {/* price */}\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"price\" className=\"label-control\">\r\n                                Price\r\n                            </label>\r\n                            <input type=\"text\" onChange={ (e) => setPrice(e.target.value) } value={price} className=\"form-control\" />\r\n                        </div>\r\n\r\n                        {/* image url */}\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"imagePath\" className=\"label-control\">\r\n                                Image URL\r\n                            </label>\r\n                            <input type=\"text\" onChange={ (e) => setImagePath(e.target.value) } value={imagePath}  className=\"form-control\"/>\r\n                        </div>\r\n\r\n                        {/* is Vegetarian */}\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"isVegetarian\" className=\"label-control\">\r\n                                Is Vegetarian\r\n                            </label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                onChange={ (e) => setIsVegetarian(e.target.checked) }\r\n                                value={isVegetarian}\r\n                                className=\"form-control\"\r\n                                checked={isVegetarian}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* button */}\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <div className=\"mb-3\">\r\n                               <button className=\"btn btn-outline-primary\" onClick={() => {navigate(\"/manager/restaurantmenu\")}}>Cancel</button>\r\n                            </div>\r\n                            <div className=\"mb-3 float-right\">\r\n                               <button className=\"btn btn-primary\" onClick={() => {updateFoodItem()}}>Update</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"col\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerEditFoodItem"]},"metadata":{},"sourceType":"module"}