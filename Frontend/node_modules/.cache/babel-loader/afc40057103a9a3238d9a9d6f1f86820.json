{"ast":null,"code":"var _jsxFileName = \"D:\\\\edited project\\\\Frontend\\\\src\\\\Pages\\\\Customer\\\\CustomerFoodItems\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport FoodItemVertical from \"../../../Components/FoodItemVertical\";\nimport { URL } from '../../../config';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerFoodItems = props => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const {\n    restId,\n    restName\n  } = state !== null && state !== void 0 ? state : {};\n  const [foodItems, setFoodItems] = useState([]);\n\n  const loadFoodItems = () => {\n    const url = `${URL}/fooditems/restaurant/${restId}`;\n    axios.get(url).then(response => {\n      const result = response.data;\n\n      if (result.status === \"SUCCESS\") {\n        setFoodItems(result.data);\n      } else {\n        toast.error(result.message);\n      }\n    });\n  };\n\n  const addToCart = (foodId, restaurantId) => {\n    if (sessionStorage.getItem(\"foodItemMap\") === null) {\n      sessionStorage[\"foodItemMap\"] = \"[]\";\n    } // check if restaurant id is set\n\n\n    if (sessionStorage.getItem(\"restaurantId\") === null) {\n      sessionStorage[\"restaurantId\"] = `${restaurantId}`;\n    } // restaurant id is set\n    // check restaurantId vs sessionStorage.getItem(\"restaurantId\")\n    // if same, means customer is ordering from same restaurant\n\n\n    if (restaurantId === parseInt(sessionStorage[\"restaurantId\"])) {\n      // add to cart\n      // gether map from sessionStorage\n      let foodItemMap = new Map(JSON.parse(sessionStorage[\"foodItemMap\"])); // check if quantity is assigned, if not, set it\n\n      if (foodItemMap.get(foodId) !== undefined || foodItemMap.get(foodId) !== null) {\n        foodItemMap.set(foodId, 1);\n      } // toast\n\n\n      toast.success(\"Added to cart\"); // stringify and store\n\n      sessionStorage[\"foodItemMap\"] = JSON.stringify(Array.from(foodItemMap.entries()));\n    } else {\n      // else, dont add to cart\n      // toast\n      toast.error(\"Can't add to cart. Please order from same restaurant.\");\n    }\n  };\n\n  useEffect(() => {\n    if (state !== null) loadFoodItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: state !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-3\",\n        children: [\"Food Items from \", restName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food-items-container\",\n        children: foodItems.map(foodItem => /*#__PURE__*/_jsxDEV(FoodItemVertical, {\n          id: foodItem.id,\n          name: foodItem.name,\n          price: foodItem.price,\n          imagePath: foodItem.imagePath,\n          restaurantId: foodItem.restaurantId,\n          addToCart: addToCart\n        }, foodItem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Something went wrong, please \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/customer/signin\",\n        children: \"try Signing In again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomerFoodItems, \"fguSYkouvY2dcz0fRL5BuuVLO+k=\", false, function () {\n  return [useLocation];\n});\n\n_c = CustomerFoodItems;\nexport default CustomerFoodItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerFoodItems\");","map":{"version":3,"sources":["D:/edited project/Frontend/src/Pages/Customer/CustomerFoodItems/index.js"],"names":["axios","useEffect","useState","useLocation","Link","toast","FoodItemVertical","URL","CustomerFoodItems","props","state","restId","restName","foodItems","setFoodItems","loadFoodItems","url","get","then","response","result","data","status","error","message","addToCart","foodId","restaurantId","sessionStorage","getItem","parseInt","foodItemMap","Map","JSON","parse","undefined","set","success","stringify","Array","from","entries","map","foodItem","id","name","price","imagePath"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport FoodItemVertical from \"../../../Components/FoodItemVertical\";\r\nimport { URL } from '../../../config'\r\nimport './index.css'\r\n\r\nconst CustomerFoodItems = (props) => {\r\n    const { state } = useLocation();\r\n    const { restId, restName } = state ?? {};\r\n\r\n    const [foodItems, setFoodItems] = useState([])\r\n\r\n    const loadFoodItems = () => {\r\n        const url = `${URL}/fooditems/restaurant/${restId}`\r\n        axios.get(url).then(response => {\r\n            const result = response.data;\r\n            if(result.status === \"SUCCESS\") {\r\n                setFoodItems(result.data)\r\n            } else {\r\n                toast.error(result.message);\r\n            }\r\n        })\r\n    }\r\n\r\n    const addToCart = (foodId, restaurantId) => {\r\n        if(sessionStorage.getItem(\"foodItemMap\") === null) {\r\n            sessionStorage[\"foodItemMap\"] = \"[]\";\r\n        }\r\n\r\n        // check if restaurant id is set\r\n        if(sessionStorage.getItem(\"restaurantId\") === null) {\r\n            sessionStorage[\"restaurantId\"] = `${restaurantId}`;\r\n        } \r\n        // restaurant id is set\r\n\r\n        // check restaurantId vs sessionStorage.getItem(\"restaurantId\")\r\n        // if same, means customer is ordering from same restaurant\r\n        if(restaurantId === parseInt(sessionStorage[\"restaurantId\"])) {\r\n            // add to cart\r\n\r\n            // gether map from sessionStorage\r\n            let foodItemMap = new Map(JSON.parse(sessionStorage[\"foodItemMap\"]))\r\n\r\n            // check if quantity is assigned, if not, set it\r\n            if(foodItemMap.get(foodId) !== undefined || foodItemMap.get(foodId) !== null) {\r\n                foodItemMap.set(foodId, 1);\r\n            }\r\n\r\n            // toast\r\n            toast.success(\"Added to cart\")\r\n\r\n            // stringify and store\r\n            sessionStorage[\"foodItemMap\"] = JSON.stringify(Array.from(foodItemMap.entries()));\r\n        } else {\r\n            // else, dont add to cart\r\n\r\n            // toast\r\n            toast.error(\"Can't add to cart. Please order from same restaurant.\")\r\n        }    \r\n    }\r\n\r\n    useEffect (() => {\r\n        if(state !== null)\r\n            loadFoodItems();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {/* {state === null ? <div>State not defined</div> : <div>State defined {console.log(state)}</div>} */}\r\n            {\r\n                state !== null ?\r\n                <div>\r\n                    <h2 className=\"mt-3\">Food Items from {restName}</h2>\r\n                    <div className=\"food-items-container\">\r\n                        {foodItems.map(foodItem =>\r\n                            <FoodItemVertical key={foodItem.id}\r\n                                id={foodItem.id}\r\n                                name={foodItem.name}\r\n                                price={foodItem.price}\r\n                                imagePath={foodItem.imagePath}\r\n                                restaurantId={foodItem.restaurantId}\r\n                                addToCart={addToCart}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                : <div>Something went wrong, please <Link to=\"/customer/signin\">try Signing In again</Link></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerFoodItems\r\n"]},"metadata":{},"sourceType":"module"}