{"ast":null,"code":"var _jsxFileName = \"D:\\\\edited project\\\\Frontend\\\\src\\\\Pages\\\\Customer\\\\CustomerSignIn\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport Swal from \"sweetalert2\";\nimport { URL } from '../../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerSignIn = () => {\n  _s();\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (sessionStorage[\"personType\"] === \"customer\" && sessionStorage[\"loginStatus\"] === \"1\") {\n      navigate(\"/customer/home\");\n    }\n  }, [navigate]);\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email address\").required(\"Please enter your email\"),\n    password: Yup.string().required(\"Please enter your password\")\n  });\n\n  const onSubmit = values => {\n    const url = `${URL}/customers/signin`;\n    axios.post(url, values).then(response => {\n      const result = response.data;\n\n      if (result.status === \"SUCCESS\") {\n        Swal.fire(\"Success\", \"Welcome to Hungry Haven\", \"success\").then(() => {\n          const {\n            id,\n            name,\n            email,\n            addressText,\n            pinCode\n          } = result.data;\n          sessionStorage.setItem('id', id);\n          sessionStorage.setItem('name', name);\n          sessionStorage.setItem('email', email);\n          sessionStorage.setItem('addressText', addressText);\n          sessionStorage.setItem('pinCode', pinCode);\n          sessionStorage.setItem('loginStatus', '1');\n          sessionStorage.setItem('personType', 'customer');\n          sessionStorage.setItem(\"foodItemMap\", \"[]\");\n          navigate('/customer/home');\n        });\n      } else {\n        toast.error(result.message);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      maxWidth: \"800px\",\n      margin: \"0 auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Customer Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: onSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"label-control\",\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\",\n              className: \"error-message text-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"label-control\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"error-message text-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"No account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/customer/signup\",\n                children: \"Sign up here!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomerSignIn, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CustomerSignIn;\nexport default CustomerSignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerSignIn\");","map":{"version":3,"sources":["D:/edited project/Frontend/src/Pages/Customer/CustomerSignIn/index.js"],"names":["useEffect","toast","Link","useNavigate","axios","Formik","Form","Field","ErrorMessage","Yup","Swal","URL","CustomerSignIn","navigate","sessionStorage","initialValues","email","password","validationSchema","object","string","required","onSubmit","values","url","post","then","response","result","data","status","fire","id","name","addressText","pinCode","setItem","error","message","maxWidth","margin"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\nimport { URL } from '../../../config';\r\n\r\nconst CustomerSignIn = () => {\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (sessionStorage[\"personType\"] === \"customer\" && sessionStorage[\"loginStatus\"] === \"1\") {\r\n            navigate(\"/customer/home\");\r\n        }\r\n    }, [navigate]);\r\n\r\n    const initialValues = {\r\n        email: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email(\"Invalid email address\").required(\"Please enter your email\"),\r\n        password: Yup.string().required(\"Please enter your password\")\r\n    });\r\n\r\n    const onSubmit = (values) => {\r\n        const url = `${URL}/customers/signin`;\r\n        axios.post(url, values).then((response) => {\r\n            const result = response.data;\r\n\r\n            if (result.status === \"SUCCESS\") {\r\n                Swal.fire(\"Success\", \"Welcome to Hungry Haven\", \"success\").then(() => {\r\n                    const { id, name, email, addressText, pinCode } = result.data;\r\n\r\n                    sessionStorage.setItem('id', id);\r\n                    sessionStorage.setItem('name', name);\r\n                    sessionStorage.setItem('email', email);\r\n                    sessionStorage.setItem('addressText', addressText);\r\n                    sessionStorage.setItem('pinCode', pinCode);\r\n\r\n                    sessionStorage.setItem('loginStatus', '1');\r\n                    sessionStorage.setItem('personType', 'customer');\r\n                    sessionStorage.setItem(\"foodItemMap\", \"[]\");\r\n\r\n                    navigate('/customer/home');\r\n                });\r\n            } else {\r\n                toast.error(result.message);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\" style={{ maxWidth: \"800px\", margin: \"0 auto\" }}>\r\n        <div className=\"card-body\">\r\n            <h2 className=\"title\">Customer Sign In</h2>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}\r\n            >\r\n                <Form className=\"form\">\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"email\" className=\"label-control\">\r\n                            Email Address\r\n                        </label>\r\n                        <Field type=\"email\" name=\"email\" className=\"form-control\" />\r\n                        <ErrorMessage name=\"email\" component=\"div\" className=\"error-message text-danger\" />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"password\" className=\"label-control\">\r\n                            Password\r\n                        </label>\r\n                        <Field type=\"password\" name=\"password\" className=\"form-control\" />\r\n                        <ErrorMessage name=\"password\" component=\"div\" className=\"error-message text-danger\" />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <div>\r\n                            No account? <Link to=\"/customer/signup\">Sign up here!</Link>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Sign In</button>\r\n                    </div>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomerSignIn;\r\n"]},"metadata":{},"sourceType":"module"}